{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","categoria","setCategoria","onSubmit","e","preventDefault","trim","length","catg","value","onChange","target","placeholder","prototype","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loding","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categorias","item","i","ReactDOM","render","document","getElementById"],"mappings":"4NAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACVC,mBAAS,IADC,mBACrCC,EADqC,KAC1BC,EAD0B,KAW5C,OACI,sBAAMC,SATc,SAACC,GACrBA,EAAEC,iBAEGJ,EAAUK,OAAOC,OAAS,IAC3BR,GAAe,SAACS,GAAD,OAAUP,GAAV,mBAAwBO,OACvCN,EAAa,MAIjB,SACI,uBACIO,MAASR,EACTS,SAAY,SAACN,GAAD,OAAOF,EAAaE,EAAEO,OAAOF,QACzCG,YAAY,gCAK5Bd,EAAYe,UAAY,CACpBd,cAAgBe,IAAUC,KAAKC,Y,mCCzBtBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVtB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAChC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCDHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFX,SAAEA,GAAe,IAAD,EACdlB,mBAAS,CAAEyB,KAAM,GAAIa,QAAQ,IADf,mBACjCC,EADiC,KAC1BC,EAD0B,KAWxC,OARAC,qBAAW,WACPxB,EAAQC,GAAUwB,MAAM,SAAAC,GAAI,OACxBC,YAAW,WACPJ,EAAS,CAACf,KAAOkB,EAAML,QAAQ,MAChC,UACR,CAACpB,IAGGqB,EDPwBM,CAAa3B,GAArCoB,EAF4B,EAE5BA,OAAcP,EAFc,EAEpBN,KAEf,OACI,yCAAKa,GAAU,4CACX,6BAAKpB,IACL,qBAAKgB,UAAU,YAAf,SAEKH,EAAOJ,KAAK,SAACC,GAAD,OACT,cAAC,EAAD,eAA+BA,GAAZA,EAAIC,aEX9BiB,EAAe,WAAO,IAAD,EACM9C,mBAAS,IADf,mBACvB+C,EADuB,KACXhD,EADW,KAG9B,OACI,qCACI,8CACA,uBACA,cAAC,EAAD,CAAaA,cAAkBA,IAC9BgD,EAAWpB,KAAK,SAACqB,EAAMC,GAAP,OACb,cAAC,EAAD,CAAS/B,SAAU8B,GACTA,UCR1BE,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.dc58c2c2.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategorias}) => {\r\n    const [categoria, setCategoria] = useState('');\r\n    \r\n    const CargarCategoria = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( categoria.trim().length > 2) {\r\n            setCategorias( (catg) =>[categoria, ...catg]);\r\n            setCategoria('');\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit={CargarCategoria}>\r\n            <input\r\n                value = {categoria}\r\n                onChange = {(e) => setCategoria(e.target.value)}\r\n                placeholder=\"Buscar Categoria de Gifs\"/>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.prototype = {\r\n    setCategorias : PropTypes.func.isRequired\r\n}","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)}&limit=10&api_key=s5djIRN5EGnJQE7xOtyK5aA1OlqpAmSB`;\r\n\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n    return (\r\n        <div className='card animate__animated animate__bounce'>\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    \r\n    const {loding, data: images} = useFetchGifs(category);\r\n        \r\n    return (\r\n        <> { loding && <p>Cargando...</p>}\r\n            <h3>{category}</h3>\r\n            <div className=\"card-grid\">\r\n            \r\n                {images.map( (img) => (\r\n                    <GifGridItem key= {img.id} {...img}/>\r\n                    )\r\n                )}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setState] = useState({ data: [], loding: true});\r\n    \r\n    useEffect( () => {\r\n        getGifs(category).then( imgs => \r\n            setTimeout(() => {\r\n                setState({data : imgs, loding: false});\r\n            }, 3000)); \r\n    }, [category])\r\n\r\n\r\n    return state;\r\n}","import React, {useState}  from 'react';\r\nimport {AddCategory} from './AddCategory'\r\nimport { GifGrid } from './GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    const [categorias, setCategorias] = useState([])\r\n\r\n    return (\r\n        <>\r\n            <h1>GifExpertApp</h1>\r\n            <hr/>\r\n            <AddCategory setCategorias = { setCategorias}/>\r\n            {categorias.map( (item, i) => (\r\n                <GifGrid category={item}\r\n                    key ={item}/>\r\n                    )\r\n            )}\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport {GifExpertApp} from './components/GifExpertApp'\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}